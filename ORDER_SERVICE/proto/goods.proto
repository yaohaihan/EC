syntax = "proto3";

option go_package = ".;proto";

package proto;

import "google/api/annotations.proto";

//在Protocol Buffers中，service就是相当于在定义一个接口，里面包含了这两个方法
service Goods{
  rpc GetGoodsByRoom(GetGoodsByRoomReq) returns (GoodsListResp){
    option (google.api.http) = {
      post: "/v1/goods"
      body: "*"
    };
  };
  rpc GetGoodsDetails(GetGoodsDetailReq) returns (GoodsDetailResp);
}


//在Protocol Buffers的语法中，数据类型在前面，和java就很像了类型加class名字   message就是在定义类
message GetGoodsByRoomReq{
  int64 UserId = 1;
  int64 RoomId = 2;
}

message GoodsListResp{
  int64 CurrentGoodsId = 1;
  repeated GoodsInfo Data = 2;
}

message GoodsInfo{
  int64 GoodsId = 1;
  int64 CategoryId = 2;
  int32 Status = 3;
  string Title = 4;
  string MarketPrice = 5;
  string Price = 6;
  string Brief = 7;
  repeated string HeadImgs = 8;
}

message GetGoodsDetailReq{
  int64 GoodsId = 1;
  int64 UserId = 2;
}

message GoodsDetailResp{
  int64 GoodsId = 1;
  int64 CategoryId = 2;
  int32 Status = 3;
  string Title = 4;
  string Code = 5;
  string BrandName = 6;
  string MarketPrice = 7;
  string Price = 8;
  string Brief = 9;
  repeated string HeadImgs = 10;
  repeated string Videos = 11;
  repeated string Detail = 12;
}